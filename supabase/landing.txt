steal ides on bacground animations and color and theme used and modify the app just the ides above

​
import React, { useState, useEffect } from 'react';
import { Wrench, Smartphone, Shield, Clock, Zap, CheckCircle, Star, Sparkles, ArrowRight, Wifi, Battery, Signal } from 'lucide-react';

export default function PhoneRepairLanding() {
  const [scrollY, setScrollY] = useState(0);
  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });
  const [hoveredCard, setHoveredCard] = useState(null);

  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY);
    const handleMouseMove = (e) => setMousePos({ x: e.clientX, y: e.clientY });
    
    window.addEventListener('scroll', handleScroll);
    window.addEventListener('mousemove', handleMouseMove);
    
    return () => {
      window.removeEventListener('scroll', handleScroll);
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-indigo-950 text-white overflow-hidden relative">
      {/* Animated Phone Icons Background */}
      <div className="absolute inset-0 overflow-hidden opacity-30">
        {[...Array(15)].map((_, i) => (
          <Smartphone
            key={i}
            className="absolute text-blue-400/20 animate-float-phone"
            style={{
              width: Math.random() * 80 + 40 + 'px',
              height: Math.random() * 80 + 40 + 'px',
              left: Math.random() * 100 + '%',
              top: Math.random() * 100 + '%',
              animationDelay: `${i * -2}s`,
              animationDuration: `${Math.random() * 20 + 15}s`,
              transform: `rotate(${Math.random() * 360}deg)`,
            }}
          />
        ))}
      </div>

      {/* Animated Circuit Pattern */}
      <div className="absolute inset-0 opacity-20">
        <svg className="w-full h-full" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="circuit" x="0" y="0" width="100" height="100" patternUnits="userSpaceOnUse">
              <circle cx="50" cy="50" r="2" fill="#3B82F6" className="animate-pulse" />
              <line x1="50" y1="50" x2="100" y2="50" stroke="#3B82F6" strokeWidth="1" className="animate-pulse" />
              <line x1="50" y1="50" x2="50" y2="100" stroke="#3B82F6" strokeWidth="1" className="animate-pulse" />
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#circuit)" />
        </svg>
      </div>

      {/* Floating Tech Icons */}
      <div className="absolute inset-0 overflow-hidden">
        {[
          { Icon: Wifi, delay: 0, duration: 12, x: 10, y: 20 },
          { Icon: Battery, delay: 2, duration: 15, x: 80, y: 30 },
          { Icon: Signal, delay: 4, duration: 18, x: 20, y: 70 },
          { Icon: Zap, delay: 6, duration: 14, x: 85, y: 60 },
          { Icon: Shield, delay: 8, duration: 16, x: 50, y: 15 },
          { Icon: Wrench, delay: 10, duration: 13, x: 70, y: 80 },
        ].map((item, i) => {
          const Icon = item.Icon;
          return (
            <Icon
              key={i}
              className="absolute text-blue-400/30 animate-float-tech"
              style={{
                width: '60px',
                height: '60px',
                left: `${item.x}%`,
                top: `${item.y}%`,
                animationDelay: `${item.delay}s`,
                animationDuration: `${item.duration}s`,
              }}
            />
          );
        })}
      </div>

      {/* Animated Binary Code Rain */}
      <div className="absolute inset-0 overflow-hidden opacity-10 font-mono text-xs text-blue-400">
        {[...Array(20)].map((_, i) => (
          <div
            key={i}
            className="absolute animate-binary-rain"
            style={{
              left: `${i * 5}%`,
              animationDelay: `${i * -0.5}s`,
              animationDuration: `${Math.random() * 5 + 5}s`,
            }}
          >
            {Array.from({ length: 30 }, () => Math.random() > 0.5 ? '1' : '0').join(' ')}
          </div>
        ))}
      </div>

      {/* Mouse Follower Glow */}
      <div
        className="absolute w-[600px] h-[600px] rounded-full pointer-events-none transition-all duration-700 ease-out"
        style={{
          left: mousePos.x - 300,
          top: mousePos.y - 300,
          background: 'radial-gradient(circle, rgba(59, 130, 246, 0.2) 0%, transparent 60%)',
          filter: 'blur(60px)',
        }}
      />

      {/* Navigation - More Transparent */}
      <nav className="relative z-50 flex items-center justify-between p-6 backdrop-blur-md bg-white/3 border-b border-white/5">
        <div className="flex items-center space-x-3 group">
          <div className="relative">
            <Smartphone className="w-9 h-9 text-blue-400 animate-pulse-glow" />
            <div className="absolute inset-0 bg-blue-400 blur-xl opacity-50 group-hover:opacity-75 transition-opacity" />
          </div>
          <span className="text-3xl font-bold bg-gradient-to-r from-blue-400 via-blue-300 to-cyan-400 bg-clip-text text-transparent">
            FixMaster
          </span>
        </div>
        <div className="hidden md:flex space-x-8">
          {['Services', 'Track Repair', 'Shop', 'Contact'].map((item, i) => (
            <button
              key={i}
              className="relative text-gray-300 hover:text-blue-400 transition-all duration-300 group"
            >
              {item}
              <span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-400 to-cyan-400 group-hover:w-full transition-all duration-300" />
            </button>
          ))}
        </div>
        <button className="px-6 py-2.5 bg-gradient-to-r from-blue-600/80 to-blue-500/80 backdrop-blur-sm rounded-full hover:shadow-2xl hover:shadow-blue-500/50 transition-all duration-300 hover:scale-105 font-medium border border-blue-400/20">
          Login
        </button>
      </nav>

      {/* Hero Section - More Transparent */}
      <div className="relative z-10 container mx-auto px-6 py-24">
        <div className="text-center space-y-10">
          {/* Floating Badge */}
          <div className="inline-flex items-center space-x-2 px-5 py-2.5 bg-blue-500/5 backdrop-blur-xl rounded-full border border-blue-400/20 animate-slide-down">
            <Sparkles className="w-4 h-4 text-blue-400 animate-spin-slow" />
            <span className="text-sm font-medium">Expert Technicians • Same-Day Service</span>
            <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse" />
          </div>

          {/* Main Headline */}
          <div className="space-y-4">
            <h1 className="text-7xl md:text-9xl font-black leading-none animate-fade-scale">
              <span className="block text-white drop-shadow-2xl">Your Phone</span>
              <span className="block bg-gradient-to-r from-blue-400 via-cyan-300 to-blue-500 bg-clip-text text-transparent animate-shimmer" style={{backgroundSize: '200% 100%'}}>
                Back to Life
              </span>
            </h1>
            <div className="flex items-center justify-center space-x-3 text-blue-400 animate-fade-in-up">
              <div className="w-12 h-0.5 bg-gradient-to-r from-transparent to-blue-400" />
              <Zap className="w-6 h-6 animate-bounce" />
              <div className="w-12 h-0.5 bg-gradient-to-l from-transparent to-blue-400" />
            </div>
          </div>

          {/* Subheadline */}
          <p className="text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed animate-fade-in-up font-light">
            Premium repairs in under <span className="text-blue-400 font-semibold">60 minutes</span>. 
            Professional service, genuine parts, and a <span className="text-blue-400 font-semibold">90-day warranty</span> you can trust.
          </p>

          {/* CTA Buttons */}
          <div className="flex flex-col sm:flex-row gap-5 justify-center items-center pt-8 animate-fade-in-up">
            <button className="group relative px-10 py-5 bg-gradient-to-r from-blue-600/90 via-blue-500/90 to-cyan-500/90 backdrop-blur-sm rounded-2xl text-lg font-bold overflow-hidden shadow-2xl shadow-blue-500/30 hover:shadow-blue-500/50 transition-all duration-500 hover:scale-105 border border-blue-400/20">
              <div className="absolute inset-0 bg-gradient-to-r from-cyan-500 to-blue-600 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
              <span className="relative flex items-center space-x-2">
                <span>Start Repair</span>
                <ArrowRight className="w-5 h-5 group-hover:translate-x-1 transition-transform" />
              </span>
            </button>
            <button className="px-10 py-5 bg-white/3 backdrop-blur-xl rounded-2xl text-lg font-semibold border-2 border-blue-400/20 hover:bg-white/5 hover:border-blue-400/40 transition-all hover:scale-105 duration-300">
              Track Device
            </button>
          </div>

          {/* Stats Grid - More Transparent */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 pt-20 max-w-6xl mx-auto">
            {[
              { number: '75K+', label: 'Devices Fixed', icon: CheckCircle, color: 'blue' },
              { number: '99.9%', label: 'Success Rate', icon: Star, color: 'cyan' },
              { number: '45min', label: 'Avg Time', icon: Clock, color: 'blue' },
              { number: '24/7', label: 'Support', icon: Shield, color: 'cyan' }
            ].map((stat, i) => {
              const Icon = stat.icon;
              return (
                <div
                  key={i}
                  className="group relative p-8 bg-gradient-to-br from-white/3 to-white/5 backdrop-blur-xl rounded-3xl border border-white/5 hover:border-blue-400/30 transition-all duration-500 hover:scale-110 hover:-translate-y-2 animate-fade-in-up"
                  style={{ animationDelay: `${i * 0.15}s` }}
                  onMouseEnter={() => setHoveredCard(i)}
                  onMouseLeave={() => setHoveredCard(null)}
                >
                  <div className={`absolute inset-0 bg-gradient-to-br ${stat.color === 'blue' ? 'from-blue-500/10 to-blue-600/5' : 'from-cyan-500/10 to-cyan-600/5'} rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500`} />
                  <Icon className={`w-10 h-10 ${stat.color === 'blue' ? 'text-blue-400' : 'text-cyan-400'} mx-auto mb-4 transition-all duration-300 ${hoveredCard === i ? 'scale-125 rotate-12' : ''}`} />
                  <div className={`text-5xl font-black mb-2 bg-gradient-to-r ${stat.color === 'blue' ? 'from-blue-400 to-blue-300' : 'from-cyan-400 to-cyan-300'} bg-clip-text text-transparent`}>
                    {stat.number}
                  </div>
                  <div className="text-gray-400 text-sm font-medium">{stat.label}</div>
                </div>
              );
            })}
          </div>
        </div>
      </div>

      {/* Services Section - More Transparent */}
      <div className="relative z-10 container mx-auto px-6 py-24">
        <div className="text-center mb-20">
          <h2 className="text-6xl md:text-7xl font-black mb-4 bg-gradient-to-r from-blue-400 via-cyan-300 to-blue-500 bg-clip-text text-transparent">
            Premium Services
          </h2>
          <p className="text-gray-400 text-lg">Expert solutions for every device issue</p>
        </div>
        
        <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {[
            { 
              title: 'Screen Repair', 
              desc: 'Crystal-clear OLED & LCD replacements with lifetime warranty on parts', 
              icon: Smartphone,
              gradient: 'from-blue-500/80 to-blue-600/80'
            },
            { 
              title: 'Battery Service', 
              desc: 'High-capacity genuine batteries with advanced diagnostic testing', 
              icon: Zap,
              gradient: 'from-cyan-500/80 to-blue-500/80'
            },
            { 
              title: 'Water Recovery', 
              desc: 'Advanced ultrasonic cleaning and component-level restoration', 
              icon: Shield,
              gradient: 'from-blue-600/80 to-cyan-600/80'
            },
          ].map((service, i) => {
            const Icon = service.icon;
            return (
              <div
                key={i}
                className="group relative p-10 bg-gradient-to-br from-white/3 to-white/5 backdrop-blur-xl rounded-3xl border border-white/5 hover:border-blue-400/30 transition-all duration-700 hover:scale-105 hover:-translate-y-3 cursor-pointer"
              >
                <div className={`absolute inset-0 bg-gradient-to-br ${service.gradient} opacity-0 group-hover:opacity-20 rounded-3xl transition-opacity duration-700 backdrop-blur-sm`} />
                <div className="absolute -inset-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-3xl opacity-0 group-hover:opacity-20 blur-xl transition-opacity duration-700" />
                
                <div className="relative">
                  <div className={`w-16 h-16 bg-gradient-to-br ${service.gradient} backdrop-blur-sm rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-500 shadow-lg shadow-blue-500/30 border border-blue-400/20`}>
                    <Icon className="w-8 h-8 text-white" />
                  </div>
                  <h3 className="text-3xl font-bold mb-4 text-white group-hover:text-blue-300 transition-colors">{service.title}</h3>
                  <p className="text-gray-400 leading-relaxed">{service.desc}</p>
                  <div className="mt-6 flex items-center text-blue-400 font-semibold opacity-0 group-hover:opacity-100 transition-all duration-500 group-hover:translate-x-2">
                    <span>Learn More</span>
                    <ArrowRight className="w-5 h-5 ml-2" />
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>

      <style jsx>{`
        @keyframes float-phone {
          0%, 100% { transform: translate(0, 0) rotate(0deg); opacity: 0.3; }
          25% { transform: translate(50px, -50px) rotate(10deg); opacity: 0.5; }
          50% { transform: translate(-30px, 30px) rotate(-5deg); opacity: 0.4; }
          75% { transform: translate(40px, 20px) rotate(15deg); opacity: 0.6; }
        }
        @keyframes float-tech {
          0%, 100% { transform: translateY(0px) rotate(0deg) scale(1); }
          50% { transform: translateY(-40px) rotate(180deg) scale(1.2); }
        }
        @keyframes binary-rain {
          0% { transform: translateY(-100%); opacity: 0; }
          10% { opacity: 1; }
          90% { opacity: 1; }
          100% { transform: translateY(100vh); opacity: 0; }
        }
        @keyframes spin-slow {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
        @keyframes shimmer {
          0% { background-position: -200% 0; }
          100% { background-position: 200% 0; }
        }
        @keyframes fade-scale {
          from { opacity: 0; transform: scale(0.9); }
          to { opacity: 1; transform: scale(1); }
        }
        @keyframes fade-in-up {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        @keyframes slide-down {
          from { opacity: 0; transform: translateY(-20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        @keyframes pulse-glow {
          0%, 100% { opacity: 1; }
          50% { opacity: 0.6; }
        }
        
        .animate-float-phone { animation: float-phone 20s ease-in-out infinite; }
        .animate-float-tech { animation: float-tech 15s ease-in-out infinite; }
        .animate-binary-rain { animation: binary-rain 8s linear infinite; }
        .animate-spin-slow { animation: spin-slow 3s linear infinite; }
        .animate-shimmer { animation: shimmer 3s linear infinite; }
        .animate-fade-scale { animation: fade-scale 0.8s ease-out; }
        .animate-fade-in-up { animation: fade-in-up 0.8s ease-out; }
        .animate-slide-down { animation: slide-down 0.6s ease-out; }
        .animate-pulse-glow { animation: pulse-glow 2s ease-in-out infinite; }
      `}</style>
    </div>
  );
}